#!/usr/bin/env python3

import os
import json


def valid_pat_path(pat_path):
    try:
        pa_token = open('{pat_path}'.format(pat_path=pat_path), 'r').read()
        return pa_token
    except IOError:
        pat_path = input('Bad input. Try again (pat_path): ').lower()
        valid_pat_path(pat_path)

def do_shell():
    endpoint = 'https://api.digitalocean.com/v2/droplets'

    hostname = valid_hostname(input('Hostname: ').lower())
    location = valid_location(input('Location: ').lower())
    ram_size = valid_ram_size(input('RAM size: ').lower())
    os_image = valid_os_image(input('OS image: ').lower())
    pa_token = valid_pat_path(input('PAT path: ').lower())
    json_obj = '{"name":"{hostname}".format(hostname=hostname),
                "region":"{location}".format(location=location),
                "size":"{ram_size}".format(ram_

}'
    a_header = 'Authorization: Bearer {pa_token}'.format(pa_token=pa_token)
    c_header = 'Content-Type: application/json'
    curl_req = 'curl -X POST "{endpoint}" \
                                -d "{json_obj}" \
                                -H "{a_header}" \
                                -H "{c_header}"'.format(endpoint=endpoint, \
                                                        json_obj=json_obj, \
                                                        a_header=a_header, \
                                                        c_header=c_header)


aws_lightsail = [] # TODO Add AWS Lightsail support.
digital_ocean = ['do', 'digital ocean']
iaas_platform = aws_lightsail + digital_ocean
vendor_choice = input('Vendor: ').lower()

if vendor_choice in iaas_platform 
    if vendor_choice in digital_ocean:
        do_shell()
#         json_obj = '{"name":"{hostname}".format(hostname=hostname),
#                     "region":"{location}".format(location=location),
#                     "size":"{ram_size}".format(ram_

# }'
#         a_header = 'Authorization: Bearer {pa_token}'.format(pa_token=pa_token)
#         c_header = 'Content-Type: application/json'
#         curl_req = 'curl -X POST "{endpoint}" \
#                                     -d "{json_obj}" \
#                                     -H "{a_header}" \
#                                     -H "{c_header}"'.format(endpoint=endpoint, \
#                                                             json_obj=json_obj, \
#                                                             a_header=a_header, \
#                                                             c_header=c_header)
else:
    print('Sorry, this vendor is not supported.')
        # endpoint = 'https://api.digitalocean.com/v2/droplets'
        # hostname = input('Hostname: ').lower()
        # location = input('Location: ').lower()
        # ram_size = input('RAM size: ').lower()
        # os_image = input('OS image: ').lower()
        # pat_path = input('PAT path: ').lower()
        # valid_pat_path(pat_path)
#        try:
#            pa_token = open('{pat_path}'.format(pat_path=pat_path), 'r').read()
#        except IOError:
#            pat_path = input('Bad input. Try again (pat_path): ').lower()
        # api_args = ['hostname', \
        #             'location', \
        #             'ram_size', \
        #             'os_image', \
        #             'pa_token']
        # try_args(api_args)
        # for api_arg in api_args:

            # if len(api_arg) < 1:
            #     x = input('Bad input. Try again ({api_arg}): '.format(api_arg=api_arg)).lower()
#         json_obj = '{"name":"{hostname}".format(hostname=hostname),
#                     "region":"{location}".format(location=location),
#                     "size":"{ram_size}".format(ram_

# }'
#         a_header = 'Authorization: Bearer {pa_token}'.format(pa_token=pa_token)
#         c_header = 'Content-Type: application/json'
#         curl_req = 'curl -X POST "{endpoint}" \
#                                     -d "{json_obj}" \
#                                     -H "{a_header}" \
#                                     -H "{c_header}"'.format(endpoint=endpoint, \
#                                                             json_obj=json_obj, \
#                                                             a_header=a_header, \
#                                                             c_header=c_header)
# else:
#     print('Sorry, this vendor is not supported.')


























#x = input('Number of nodes: ')
# email address
# server ip address
# server name
# server username
# server password
# defined ssh port

#elecmail = input('')


#hostname = input('')
#username = input('')
#password = input('')
